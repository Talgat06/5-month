{"ast":null,"code":"const initialState = {\n  count: 0\n};\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        count: state.count + action.payload\n      };\n    case 'DECREMENT':\n      return {\n        count: Math.max(0, state.count - action.payload)\n      };\n    case 'RESET':\n      return {\n        count: 0\n      };\n    default:\n      return state;\n  }\n};\nexport default counterReducer;","map":{"version":3,"names":["initialState","count","counterReducer","state","action","type","payload","Math","max"],"sources":["C:/Users/user/Desktop/Geeks/5 month/homework1/src/redux/reducer.js"],"sourcesContent":["const initialState = {\r\n    count: 0,\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            return { count: state.count + action.payload };\r\n        case 'DECREMENT':\r\n            return { count: Math.max(0, state.count - action.payload) };\r\n        case 'RESET':\r\n            return { count: 0 };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default counterReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAO;QAAEJ,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGG,MAAM,CAACE;MAAQ,CAAC;IAClD,KAAK,WAAW;MACZ,OAAO;QAAEL,KAAK,EAAEM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,KAAK,CAACF,KAAK,GAAGG,MAAM,CAACE,OAAO;MAAE,CAAC;IAC/D,KAAK,OAAO;MACR,OAAO;QAAEL,KAAK,EAAE;MAAE,CAAC;IACvB;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}